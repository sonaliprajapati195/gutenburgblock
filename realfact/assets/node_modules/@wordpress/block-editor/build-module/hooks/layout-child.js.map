{"version":3,"names":["useInstanceId","useSelect","store","blockEditorStore","useStyleOverride","useLayout","GridVisualizer","GridItemResizer","useBlockPropsChildLayoutStyles","style","_style$layout","shouldRenderChildLayoutStyles","select","getSettings","disableLayoutStyles","layout","selfStretch","flexSize","columnStart","rowStart","columnSpan","rowSpan","parentLayout","columnCount","minimumColumnWidth","id","selector","css","columnSpanNumber","parseInt","columnStartNumber","highestNumber","Math","max","parentColumnValue","parseFloat","isNaN","parentColumnUnit","replace","includes","defaultGapValue","containerQueryValue","gridColumnValue","className","ChildLayoutControlsPure","clientId","setAttributes","rootClientId","getBlockRootClientId","type","window","__experimentalEnableGridInteractivity","createElement","Fragment","onChange","useBlockProps","edit","attributeKeys","hasSupport"],"sources":["@wordpress/block-editor/src/hooks/layout-child.js"],"sourcesContent":["/**\n * WordPress dependencies\n */\nimport { useInstanceId } from '@wordpress/compose';\nimport { useSelect } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport { store as blockEditorStore } from '../store';\nimport { useStyleOverride } from './utils';\nimport { useLayout } from '../components/block-list/layout';\nimport { GridVisualizer, GridItemResizer } from '../components/grid-visualizer';\n\nfunction useBlockPropsChildLayoutStyles( { style } ) {\n\tconst shouldRenderChildLayoutStyles = useSelect( ( select ) => {\n\t\treturn ! select( blockEditorStore ).getSettings().disableLayoutStyles;\n\t} );\n\tconst layout = style?.layout ?? {};\n\tconst {\n\t\tselfStretch,\n\t\tflexSize,\n\t\tcolumnStart,\n\t\trowStart,\n\t\tcolumnSpan,\n\t\trowSpan,\n\t} = layout;\n\tconst parentLayout = useLayout() || {};\n\tconst { columnCount, minimumColumnWidth } = parentLayout;\n\tconst id = useInstanceId( useBlockPropsChildLayoutStyles );\n\tconst selector = `.wp-container-content-${ id }`;\n\n\tlet css = '';\n\tif ( shouldRenderChildLayoutStyles ) {\n\t\tif ( selfStretch === 'fixed' && flexSize ) {\n\t\t\tcss = `${ selector } {\n\t\t\t\tflex-basis: ${ flexSize };\n\t\t\t\tbox-sizing: border-box;\n\t\t\t}`;\n\t\t} else if ( selfStretch === 'fill' ) {\n\t\t\tcss = `${ selector } {\n\t\t\t\tflex-grow: 1;\n\t\t\t}`;\n\t\t} else if ( columnStart && columnSpan ) {\n\t\t\tcss = `${ selector } {\n\t\t\t\tgrid-column: ${ columnStart } / span ${ columnSpan };\n\t\t\t}`;\n\t\t} else if ( columnStart ) {\n\t\t\tcss = `${ selector } {\n\t\t\t\tgrid-column: ${ columnStart };\n\t\t\t}`;\n\t\t} else if ( columnSpan ) {\n\t\t\tcss = `${ selector } {\n\t\t\t\tgrid-column: span ${ columnSpan };\n\t\t\t}`;\n\t\t}\n\t\t/**\n\t\t * If minimumColumnWidth is set on the parent, or if no\n\t\t * columnCount is set, the grid is responsive so a\n\t\t * container query is needed for the span to resize.\n\t\t */\n\t\tif (\n\t\t\t( columnSpan || columnStart ) &&\n\t\t\t( minimumColumnWidth || ! columnCount )\n\t\t) {\n\t\t\t// Check if columnSpan and columnStart are numbers so Math.max doesn't break.\n\t\t\tconst columnSpanNumber = columnSpan ? parseInt( columnSpan ) : null;\n\t\t\tconst columnStartNumber = columnStart\n\t\t\t\t? parseInt( columnStart )\n\t\t\t\t: null;\n\t\t\tconst highestNumber = Math.max(\n\t\t\t\tcolumnSpanNumber,\n\t\t\t\tcolumnStartNumber\n\t\t\t);\n\n\t\t\tlet parentColumnValue = parseFloat( minimumColumnWidth );\n\t\t\t/**\n\t\t\t * 12rem is the default minimumColumnWidth value.\n\t\t\t * If parentColumnValue is not a number, default to 12.\n\t\t\t */\n\t\t\tif ( isNaN( parentColumnValue ) ) {\n\t\t\t\tparentColumnValue = 12;\n\t\t\t}\n\n\t\t\tlet parentColumnUnit = minimumColumnWidth?.replace(\n\t\t\t\tparentColumnValue,\n\t\t\t\t''\n\t\t\t);\n\t\t\t/**\n\t\t\t * Check that parent column unit is either 'px', 'rem' or 'em'.\n\t\t\t * If not, default to 'rem'.\n\t\t\t */\n\t\t\tif ( ! [ 'px', 'rem', 'em' ].includes( parentColumnUnit ) ) {\n\t\t\t\tparentColumnUnit = 'rem';\n\t\t\t}\n\n\t\t\tconst defaultGapValue = parentColumnUnit === 'px' ? 24 : 1.5;\n\t\t\tconst containerQueryValue =\n\t\t\t\thighestNumber * parentColumnValue +\n\t\t\t\t( highestNumber - 1 ) * defaultGapValue;\n\t\t\t// If a span is set we want to preserve it as long as possible, otherwise we just reset the value.\n\t\t\tconst gridColumnValue = columnSpan ? '1/-1' : 'auto';\n\n\t\t\tcss += `@container (max-width: ${ containerQueryValue }${ parentColumnUnit }) {\n\t\t\t\t${ selector } {\n\t\t\t\t\tgrid-column: ${ gridColumnValue };\n\t\t\t\t}\n\t\t\t}`;\n\t\t}\n\t\tif ( rowStart && rowSpan ) {\n\t\t\tcss += `${ selector } {\n\t\t\t\tgrid-row: ${ rowStart } / span ${ rowSpan };\n\t\t\t}`;\n\t\t} else if ( rowStart ) {\n\t\t\tcss += `${ selector } {\n\t\t\t\tgrid-row: ${ rowStart };\n\t\t\t}`;\n\t\t} else if ( rowSpan ) {\n\t\t\tcss += `${ selector } {\n\t\t\t\tgrid-row: span ${ rowSpan };\n\t\t\t}`;\n\t\t}\n\t}\n\n\tuseStyleOverride( { css } );\n\n\t// Only attach a container class if there is generated CSS to be attached.\n\tif ( ! css ) {\n\t\treturn;\n\t}\n\n\t// Attach a `wp-container-content` id-based classname.\n\treturn { className: `wp-container-content-${ id }` };\n}\n\nfunction ChildLayoutControlsPure( { clientId, style, setAttributes } ) {\n\tconst parentLayout = useLayout() || {};\n\tconst rootClientId = useSelect(\n\t\t( select ) => {\n\t\t\treturn select( blockEditorStore ).getBlockRootClientId( clientId );\n\t\t},\n\t\t[ clientId ]\n\t);\n\tif ( parentLayout.type !== 'grid' ) {\n\t\treturn null;\n\t}\n\tif ( ! window.__experimentalEnableGridInteractivity ) {\n\t\treturn null;\n\t}\n\treturn (\n\t\t<>\n\t\t\t<GridVisualizer clientId={ rootClientId } />\n\t\t\t<GridItemResizer\n\t\t\t\tclientId={ clientId }\n\t\t\t\tonChange={ ( { columnSpan, rowSpan } ) => {\n\t\t\t\t\tsetAttributes( {\n\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\t...style,\n\t\t\t\t\t\t\tlayout: {\n\t\t\t\t\t\t\t\t...style?.layout,\n\t\t\t\t\t\t\t\tcolumnSpan,\n\t\t\t\t\t\t\t\trowSpan,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t} );\n\t\t\t\t} }\n\t\t\t/>\n\t\t</>\n\t);\n}\n\nexport default {\n\tuseBlockProps: useBlockPropsChildLayoutStyles,\n\tedit: ChildLayoutControlsPure,\n\tattributeKeys: [ 'style' ],\n\thasSupport() {\n\t\treturn true;\n\t},\n};\n"],"mappings":"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"}