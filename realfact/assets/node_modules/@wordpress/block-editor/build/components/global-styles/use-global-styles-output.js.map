{"version":3,"names":["_blocks","require","_data","_element","_styleEngine","_components","_utils","_getBlockCssSelector","_typographyUtils","_context","_hooks","_utils2","_gap","_store","_definitions","_object","_blockContext","_interopRequireDefault","_lockUnlock","BLOCK_SUPPORT_FEATURE_LEVEL_SELECTORS","__experimentalBorder","color","spacing","typography","compileStyleValue","uncompiledValue","VARIABLE_REFERENCE_PREFIX","VARIABLE_PATH_SEPARATOR_TOKEN_ATTRIBUTE","VARIABLE_PATH_SEPARATOR_TOKEN_STYLE","startsWith","variable","slice","length","split","join","getPresetsDeclarations","blockPresets","mergedSettings","kebabCase","unlock","componentsPrivateApis","PRESET_METADATA","reduce","declarations","path","valueKey","valueFunc","cssVarInfix","presetByOrigin","getValueFromObjectPath","forEach","origin","value","push","slug","getPresetsClasses","blockSelector","classes","classSuffix","propertyName","classSelectorToUse","selectorToUse","map","selector","getPresetsSvgFilters","filter","metadata","at","flatMap","preset","getDuotoneFilter","colors","flattenTree","input","prefix","token","result","Object","keys","key","newKey","replace","newLeaf","newPrefix","concatFeatureVariationSelectorString","featureSelector","styleVariationSelector","featureSelectors","combinedSelectors","trim","getFeatureDeclarations","selectors","styles","entries","feature","isShorthand","subfeature","subfeatureSelector","subfeatureStyles","newDeclarations","getStylesDeclarations","root","featureStyles","blockStyles","useRootPaddingAlign","tree","isTemplate","isRoot","ROOT_BLOCK_SELECTOR","output","STYLE_PROPERTY","properties","useEngine","rootOnly","pathToValue","styleValue","entry","name","prop","cssProperty","extraRules","getCSSRules","rule","ruleValue","ref","refPath","getTypographyFontSizeValue","size","settings","getLayoutStyles","layoutDefinitions","LAYOUT_DEFINITIONS","style","hasBlockGapSupport","hasFallbackGapSupport","fallbackGapValue","ruleset","gapValue","getGapCSSValue","blockGap","values","className","spacingStyles","spacingStyle","rules","cssValue","combinedSelector","ROOT_CSS_PROPERTIES_SELECTOR","validDisplayModes","displayMode","baseStyles","includes","baseStyle","STYLE_KEYS","pickStyleKeys","treeToPickFrom","pickedEntries","clonedEntries","JSON","parse","stringify","fromEntries","getNodesWithStyles","blockSelectors","_tree$styles$blocks","nodes","ELEMENTS","elements","blocks","blockName","node","_node$elements","variations","variation","duotoneSelector","hasLayoutSupport","styleVariationSelectors","elementName","sel","elementSelectors","elementSelector","exports","getNodesWithSettings","_tree$settings$blocks","pickPresets","presets","setImmutably","custom","blockCustom","toCustomProperties","customProps","toStyles","disableLayoutStyles","nodesWithStyles","nodesWithSettings","useRootPaddingAwareAlignments","contentSize","wideSize","layout","featureDeclarations","cssSelector","styleVariationName","styleVariations","baseSelector","styleVariationDeclarations","duotoneStyles","duotoneDeclarations","pseudoSelectorStyles","pseudoKey","pseudoStyle","pseudoDeclarations","_selector","pseudoRule","toSvgFilters","getSelectorsConfig","blockType","rootSelector","config","featureKey","featureName","getBlockCSSSelector","getBlockSelectors","blockTypes","getBlockStyles","duotoneSupport","getBlockSupport","scopeSelector","supports","__experimentalLayout","__experimentalDefault","blockStyleVariations","getBlockStyleVariationSelector","undefined","updateConfigWithSeparator","needsSeparatorStyleUpdate","background","text","border","processCSSNesting","css","processedCSS","parts","part","isRootCss","splittedPart","nestedSelector","appendToSelector","useGlobalStylesOutputWithConfig","mergedConfig","useGlobalSetting","useSelect","select","getSettings","blockEditorStore","blockContext","useContext","BlockContext","templateSlug","blocksStore","useMemo","_updatedConfig$styles","updatedConfig","getBlockTypes","customProperties","globalStyles","svgs","isGlobalStyles","assets","__unstableType","useGlobalStylesOutput","merged","GlobalStylesContext"],"sources":["@wordpress/block-editor/src/components/global-styles/use-global-styles-output.js"],"sourcesContent":["/**\n * WordPress dependencies\n */\nimport {\n\t__EXPERIMENTAL_STYLE_PROPERTY as STYLE_PROPERTY,\n\t__EXPERIMENTAL_ELEMENTS as ELEMENTS,\n\tgetBlockSupport,\n\tgetBlockTypes,\n\tstore as blocksStore,\n} from '@wordpress/blocks';\nimport { useSelect } from '@wordpress/data';\nimport { useContext, useMemo } from '@wordpress/element';\nimport { getCSSRules } from '@wordpress/style-engine';\nimport { privateApis as componentsPrivateApis } from '@wordpress/components';\n\n/**\n * Internal dependencies\n */\nimport {\n\tPRESET_METADATA,\n\tROOT_BLOCK_SELECTOR,\n\tROOT_CSS_PROPERTIES_SELECTOR,\n\tscopeSelector,\n\tappendToSelector,\n\tgetBlockStyleVariationSelector,\n} from './utils';\nimport { getBlockCSSSelector } from './get-block-css-selector';\nimport { getTypographyFontSizeValue } from './typography-utils';\nimport { GlobalStylesContext } from './context';\nimport { useGlobalSetting } from './hooks';\nimport { getDuotoneFilter } from '../duotone/utils';\nimport { getGapCSSValue } from '../../hooks/gap';\nimport { store as blockEditorStore } from '../../store';\nimport { LAYOUT_DEFINITIONS } from '../../layouts/definitions';\nimport { getValueFromObjectPath, setImmutably } from '../../utils/object';\nimport BlockContext from '../block-context';\nimport { unlock } from '../../lock-unlock';\n\n// List of block support features that can have their related styles\n// generated under their own feature level selector rather than the block's.\nconst BLOCK_SUPPORT_FEATURE_LEVEL_SELECTORS = {\n\t__experimentalBorder: 'border',\n\tcolor: 'color',\n\tspacing: 'spacing',\n\ttypography: 'typography',\n};\n\nfunction compileStyleValue( uncompiledValue ) {\n\tconst VARIABLE_REFERENCE_PREFIX = 'var:';\n\tconst VARIABLE_PATH_SEPARATOR_TOKEN_ATTRIBUTE = '|';\n\tconst VARIABLE_PATH_SEPARATOR_TOKEN_STYLE = '--';\n\n\tif ( uncompiledValue?.startsWith?.( VARIABLE_REFERENCE_PREFIX ) ) {\n\t\tconst variable = uncompiledValue\n\t\t\t.slice( VARIABLE_REFERENCE_PREFIX.length )\n\t\t\t.split( VARIABLE_PATH_SEPARATOR_TOKEN_ATTRIBUTE )\n\t\t\t.join( VARIABLE_PATH_SEPARATOR_TOKEN_STYLE );\n\t\treturn `var(--wp--${ variable })`;\n\t}\n\treturn uncompiledValue;\n}\n\n/**\n * Transform given preset tree into a set of style declarations.\n *\n * @param {Object} blockPresets\n * @param {Object} mergedSettings Merged theme.json settings.\n *\n * @return {Array<Object>} An array of style declarations.\n */\nfunction getPresetsDeclarations( blockPresets = {}, mergedSettings ) {\n\tconst { kebabCase } = unlock( componentsPrivateApis );\n\n\treturn PRESET_METADATA.reduce(\n\t\t( declarations, { path, valueKey, valueFunc, cssVarInfix } ) => {\n\t\t\tconst presetByOrigin = getValueFromObjectPath(\n\t\t\t\tblockPresets,\n\t\t\t\tpath,\n\t\t\t\t[]\n\t\t\t);\n\t\t\t[ 'default', 'theme', 'custom' ].forEach( ( origin ) => {\n\t\t\t\tif ( presetByOrigin[ origin ] ) {\n\t\t\t\t\tpresetByOrigin[ origin ].forEach( ( value ) => {\n\t\t\t\t\t\tif ( valueKey && ! valueFunc ) {\n\t\t\t\t\t\t\tdeclarations.push(\n\t\t\t\t\t\t\t\t`--wp--preset--${ cssVarInfix }--${ kebabCase(\n\t\t\t\t\t\t\t\t\tvalue.slug\n\t\t\t\t\t\t\t\t) }: ${ value[ valueKey ] }`\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else if (\n\t\t\t\t\t\t\tvalueFunc &&\n\t\t\t\t\t\t\ttypeof valueFunc === 'function'\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tdeclarations.push(\n\t\t\t\t\t\t\t\t`--wp--preset--${ cssVarInfix }--${ kebabCase(\n\t\t\t\t\t\t\t\t\tvalue.slug\n\t\t\t\t\t\t\t\t) }: ${ valueFunc( value, mergedSettings ) }`\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\treturn declarations;\n\t\t},\n\t\t[]\n\t);\n}\n\n/**\n * Transform given preset tree into a set of preset class declarations.\n *\n * @param {?string} blockSelector\n * @param {Object}  blockPresets\n * @return {string} CSS declarations for the preset classes.\n */\nfunction getPresetsClasses( blockSelector = '*', blockPresets = {} ) {\n\tconst { kebabCase } = unlock( componentsPrivateApis );\n\n\treturn PRESET_METADATA.reduce(\n\t\t( declarations, { path, cssVarInfix, classes } ) => {\n\t\t\tif ( ! classes ) {\n\t\t\t\treturn declarations;\n\t\t\t}\n\n\t\t\tconst presetByOrigin = getValueFromObjectPath(\n\t\t\t\tblockPresets,\n\t\t\t\tpath,\n\t\t\t\t[]\n\t\t\t);\n\t\t\t[ 'default', 'theme', 'custom' ].forEach( ( origin ) => {\n\t\t\t\tif ( presetByOrigin[ origin ] ) {\n\t\t\t\t\tpresetByOrigin[ origin ].forEach( ( { slug } ) => {\n\t\t\t\t\t\tclasses.forEach( ( { classSuffix, propertyName } ) => {\n\t\t\t\t\t\t\tconst classSelectorToUse = `.has-${ kebabCase(\n\t\t\t\t\t\t\t\tslug\n\t\t\t\t\t\t\t) }-${ classSuffix }`;\n\t\t\t\t\t\t\tconst selectorToUse = blockSelector\n\t\t\t\t\t\t\t\t.split( ',' ) // Selector can be \"h1, h2, h3\"\n\t\t\t\t\t\t\t\t.map(\n\t\t\t\t\t\t\t\t\t( selector ) =>\n\t\t\t\t\t\t\t\t\t\t`${ selector }${ classSelectorToUse }`\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t.join( ',' );\n\t\t\t\t\t\t\tconst value = `var(--wp--preset--${ cssVarInfix }--${ kebabCase(\n\t\t\t\t\t\t\t\tslug\n\t\t\t\t\t\t\t) })`;\n\t\t\t\t\t\t\tdeclarations += `${ selectorToUse }{${ propertyName }: ${ value } !important;}`;\n\t\t\t\t\t\t} );\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t} );\n\t\t\treturn declarations;\n\t\t},\n\t\t''\n\t);\n}\n\nfunction getPresetsSvgFilters( blockPresets = {} ) {\n\treturn PRESET_METADATA.filter(\n\t\t// Duotone are the only type of filters for now.\n\t\t( metadata ) => metadata.path.at( -1 ) === 'duotone'\n\t).flatMap( ( metadata ) => {\n\t\tconst presetByOrigin = getValueFromObjectPath(\n\t\t\tblockPresets,\n\t\t\tmetadata.path,\n\t\t\t{}\n\t\t);\n\t\treturn [ 'default', 'theme' ]\n\t\t\t.filter( ( origin ) => presetByOrigin[ origin ] )\n\t\t\t.flatMap( ( origin ) =>\n\t\t\t\tpresetByOrigin[ origin ].map( ( preset ) =>\n\t\t\t\t\tgetDuotoneFilter(\n\t\t\t\t\t\t`wp-duotone-${ preset.slug }`,\n\t\t\t\t\t\tpreset.colors\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t)\n\t\t\t.join( '' );\n\t} );\n}\n\nfunction flattenTree( input = {}, prefix, token ) {\n\tconst { kebabCase } = unlock( componentsPrivateApis );\n\tlet result = [];\n\tObject.keys( input ).forEach( ( key ) => {\n\t\tconst newKey = prefix + kebabCase( key.replace( '/', '-' ) );\n\t\tconst newLeaf = input[ key ];\n\n\t\tif ( newLeaf instanceof Object ) {\n\t\t\tconst newPrefix = newKey + token;\n\t\t\tresult = [ ...result, ...flattenTree( newLeaf, newPrefix, token ) ];\n\t\t} else {\n\t\t\tresult.push( `${ newKey }: ${ newLeaf }` );\n\t\t}\n\t} );\n\treturn result;\n}\n\n/**\n * Gets variation selector string from feature selector.\n *\n * @param {string} featureSelector        The feature selector.\n *\n * @param {string} styleVariationSelector The style variation selector.\n * @return {string} Combined selector string.\n */\nfunction concatFeatureVariationSelectorString(\n\tfeatureSelector,\n\tstyleVariationSelector\n) {\n\tconst featureSelectors = featureSelector.split( ',' );\n\tconst combinedSelectors = [];\n\tfeatureSelectors.forEach( ( selector ) => {\n\t\tcombinedSelectors.push(\n\t\t\t`${ styleVariationSelector.trim() }${ selector.trim() }`\n\t\t);\n\t} );\n\treturn combinedSelectors.join( ', ' );\n}\n\n/**\n * Generate style declarations for a block's custom feature and subfeature\n * selectors.\n *\n * NOTE: The passed `styles` object will be mutated by this function.\n *\n * @param {Object} selectors Custom selectors object for a block.\n * @param {Object} styles    A block's styles object.\n *\n * @return {Object} Style declarations.\n */\nconst getFeatureDeclarations = ( selectors, styles ) => {\n\tconst declarations = {};\n\n\tObject.entries( selectors ).forEach( ( [ feature, selector ] ) => {\n\t\t// We're only processing features/subfeatures that have styles.\n\t\tif ( feature === 'root' || ! styles?.[ feature ] ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst isShorthand = typeof selector === 'string';\n\n\t\t// If we have a selector object instead of shorthand process it.\n\t\tif ( ! isShorthand ) {\n\t\t\tObject.entries( selector ).forEach(\n\t\t\t\t( [ subfeature, subfeatureSelector ] ) => {\n\t\t\t\t\t// Don't process root feature selector yet or any\n\t\t\t\t\t// subfeature that doesn't have a style.\n\t\t\t\t\tif (\n\t\t\t\t\t\tsubfeature === 'root' ||\n\t\t\t\t\t\t! styles?.[ feature ][ subfeature ]\n\t\t\t\t\t) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Create a temporary styles object and build\n\t\t\t\t\t// declarations for subfeature.\n\t\t\t\t\tconst subfeatureStyles = {\n\t\t\t\t\t\t[ feature ]: {\n\t\t\t\t\t\t\t[ subfeature ]: styles[ feature ][ subfeature ],\n\t\t\t\t\t\t},\n\t\t\t\t\t};\n\t\t\t\t\tconst newDeclarations =\n\t\t\t\t\t\tgetStylesDeclarations( subfeatureStyles );\n\n\t\t\t\t\t// Merge new declarations in with any others that\n\t\t\t\t\t// share the same selector.\n\t\t\t\t\tdeclarations[ subfeatureSelector ] = [\n\t\t\t\t\t\t...( declarations[ subfeatureSelector ] || [] ),\n\t\t\t\t\t\t...newDeclarations,\n\t\t\t\t\t];\n\n\t\t\t\t\t// Remove the subfeature's style now it will be\n\t\t\t\t\t// included under its own selector not the block's.\n\t\t\t\t\tdelete styles[ feature ][ subfeature ];\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\n\t\t// Now subfeatures have been processed and removed, we can\n\t\t// process root, or shorthand, feature selectors.\n\t\tif ( isShorthand || selector.root ) {\n\t\t\tconst featureSelector = isShorthand ? selector : selector.root;\n\n\t\t\t// Create temporary style object and build declarations for feature.\n\t\t\tconst featureStyles = { [ feature ]: styles[ feature ] };\n\t\t\tconst newDeclarations = getStylesDeclarations( featureStyles );\n\n\t\t\t// Merge new declarations with any others that share the selector.\n\t\t\tdeclarations[ featureSelector ] = [\n\t\t\t\t...( declarations[ featureSelector ] || [] ),\n\t\t\t\t...newDeclarations,\n\t\t\t];\n\n\t\t\t// Remove the feature from the block's styles now as it will be\n\t\t\t// included under its own selector not the block's.\n\t\t\tdelete styles[ feature ];\n\t\t}\n\t} );\n\n\treturn declarations;\n};\n\n/**\n * Transform given style tree into a set of style declarations.\n *\n * @param {Object}  blockStyles         Block styles.\n *\n * @param {string}  selector            The selector these declarations should attach to.\n *\n * @param {boolean} useRootPaddingAlign Whether to use CSS custom properties in root selector.\n *\n * @param {Object}  tree                A theme.json tree containing layout definitions.\n *\n * @param {boolean} isTemplate          Whether the entity being edited is a full template or a pattern.\n * @return {Array} An array of style declarations.\n */\nexport function getStylesDeclarations(\n\tblockStyles = {},\n\tselector = '',\n\tuseRootPaddingAlign,\n\ttree = {},\n\tisTemplate = true\n) {\n\tconst { kebabCase } = unlock( componentsPrivateApis );\n\tconst isRoot = ROOT_BLOCK_SELECTOR === selector;\n\tconst output = Object.entries( STYLE_PROPERTY ).reduce(\n\t\t(\n\t\t\tdeclarations,\n\t\t\t[ key, { value, properties, useEngine, rootOnly } ]\n\t\t) => {\n\t\t\tif ( rootOnly && ! isRoot ) {\n\t\t\t\treturn declarations;\n\t\t\t}\n\t\t\tconst pathToValue = value;\n\t\t\tif ( pathToValue[ 0 ] === 'elements' || useEngine ) {\n\t\t\t\treturn declarations;\n\t\t\t}\n\n\t\t\tconst styleValue = getValueFromObjectPath(\n\t\t\t\tblockStyles,\n\t\t\t\tpathToValue\n\t\t\t);\n\n\t\t\t// Root-level padding styles don't currently support strings with CSS shorthand values.\n\t\t\t// This may change: https://github.com/WordPress/gutenberg/issues/40132.\n\t\t\tif (\n\t\t\t\tkey === '--wp--style--root--padding' &&\n\t\t\t\t( typeof styleValue === 'string' || ! useRootPaddingAlign )\n\t\t\t) {\n\t\t\t\treturn declarations;\n\t\t\t}\n\n\t\t\tif ( properties && typeof styleValue !== 'string' ) {\n\t\t\t\tObject.entries( properties ).forEach( ( entry ) => {\n\t\t\t\t\tconst [ name, prop ] = entry;\n\n\t\t\t\t\tif (\n\t\t\t\t\t\t! getValueFromObjectPath( styleValue, [ prop ], false )\n\t\t\t\t\t) {\n\t\t\t\t\t\t// Do not create a declaration\n\t\t\t\t\t\t// for sub-properties that don't have any value.\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst cssProperty = name.startsWith( '--' )\n\t\t\t\t\t\t? name\n\t\t\t\t\t\t: kebabCase( name );\n\t\t\t\t\tdeclarations.push(\n\t\t\t\t\t\t`${ cssProperty }: ${ compileStyleValue(\n\t\t\t\t\t\t\tgetValueFromObjectPath( styleValue, [ prop ] )\n\t\t\t\t\t\t) }`\n\t\t\t\t\t);\n\t\t\t\t} );\n\t\t\t} else if (\n\t\t\t\tgetValueFromObjectPath( blockStyles, pathToValue, false )\n\t\t\t) {\n\t\t\t\tconst cssProperty = key.startsWith( '--' )\n\t\t\t\t\t? key\n\t\t\t\t\t: kebabCase( key );\n\t\t\t\tdeclarations.push(\n\t\t\t\t\t`${ cssProperty }: ${ compileStyleValue(\n\t\t\t\t\t\tgetValueFromObjectPath( blockStyles, pathToValue )\n\t\t\t\t\t) }`\n\t\t\t\t);\n\t\t\t}\n\n\t\t\treturn declarations;\n\t\t},\n\t\t[]\n\t);\n\n\t// The goal is to move everything to server side generated engine styles\n\t// This is temporary as we absorb more and more styles into the engine.\n\tconst extraRules = getCSSRules( blockStyles );\n\textraRules.forEach( ( rule ) => {\n\t\t// Don't output padding properties if padding variables are set or if we're not editing a full template.\n\t\tif (\n\t\t\tisRoot &&\n\t\t\t( useRootPaddingAlign || ! isTemplate ) &&\n\t\t\trule.key.startsWith( 'padding' )\n\t\t) {\n\t\t\treturn;\n\t\t}\n\t\tconst cssProperty = rule.key.startsWith( '--' )\n\t\t\t? rule.key\n\t\t\t: kebabCase( rule.key );\n\n\t\tlet ruleValue = rule.value;\n\t\tif ( typeof ruleValue !== 'string' && ruleValue?.ref ) {\n\t\t\tconst refPath = ruleValue.ref.split( '.' );\n\t\t\truleValue = compileStyleValue(\n\t\t\t\tgetValueFromObjectPath( tree, refPath )\n\t\t\t);\n\t\t\t// Presence of another ref indicates a reference to another dynamic value.\n\t\t\t// Pointing to another dynamic value is not supported.\n\t\t\tif ( ! ruleValue || ruleValue?.ref ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\t// Calculate fluid typography rules where available.\n\t\tif ( cssProperty === 'font-size' ) {\n\t\t\t/*\n\t\t\t * getTypographyFontSizeValue() will check\n\t\t\t * if fluid typography has been activated and also\n\t\t\t * whether the incoming value can be converted to a fluid value.\n\t\t\t * Values that already have a \"clamp()\" function will not pass the test,\n\t\t\t * and therefore the original $value will be returned.\n\t\t\t */\n\t\t\truleValue = getTypographyFontSizeValue(\n\t\t\t\t{ size: ruleValue },\n\t\t\t\ttree?.settings\n\t\t\t);\n\t\t}\n\n\t\t// For aspect ratio to work, other dimensions rules (and Cover block defaults) must be unset.\n\t\t// This ensures that a fixed height does not override the aspect ratio.\n\t\tif ( cssProperty === 'aspect-ratio' ) {\n\t\t\toutput.push( 'min-height: unset' );\n\t\t}\n\n\t\toutput.push( `${ cssProperty }: ${ ruleValue }` );\n\t} );\n\n\treturn output;\n}\n\n/**\n * Get generated CSS for layout styles by looking up layout definitions provided\n * in theme.json, and outputting common layout styles, and specific blockGap values.\n *\n * @param {Object}  props\n * @param {Object}  props.layoutDefinitions     Layout definitions, keyed by layout type.\n * @param {Object}  props.style                 A style object containing spacing values.\n * @param {string}  props.selector              Selector used to group together layout styling rules.\n * @param {boolean} props.hasBlockGapSupport    Whether or not the theme opts-in to blockGap support.\n * @param {boolean} props.hasFallbackGapSupport Whether or not the theme allows fallback gap styles.\n * @param {?string} props.fallbackGapValue      An optional fallback gap value if no real gap value is available.\n * @return {string} Generated CSS rules for the layout styles.\n */\nexport function getLayoutStyles( {\n\tlayoutDefinitions = LAYOUT_DEFINITIONS,\n\tstyle,\n\tselector,\n\thasBlockGapSupport,\n\thasFallbackGapSupport,\n\tfallbackGapValue,\n} ) {\n\tlet ruleset = '';\n\tlet gapValue = hasBlockGapSupport\n\t\t? getGapCSSValue( style?.spacing?.blockGap )\n\t\t: '';\n\n\t// Ensure a fallback gap value for the root layout definitions,\n\t// and use a fallback value if one is provided for the current block.\n\tif ( hasFallbackGapSupport ) {\n\t\tif ( selector === ROOT_BLOCK_SELECTOR ) {\n\t\t\tgapValue = ! gapValue ? '0.5em' : gapValue;\n\t\t} else if ( ! hasBlockGapSupport && fallbackGapValue ) {\n\t\t\tgapValue = fallbackGapValue;\n\t\t}\n\t}\n\n\tif ( gapValue && layoutDefinitions ) {\n\t\tObject.values( layoutDefinitions ).forEach(\n\t\t\t( { className, name, spacingStyles } ) => {\n\t\t\t\t// Allow outputting fallback gap styles for flex layout type when block gap support isn't available.\n\t\t\t\tif (\n\t\t\t\t\t! hasBlockGapSupport &&\n\t\t\t\t\t'flex' !== name &&\n\t\t\t\t\t'grid' !== name\n\t\t\t\t) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif ( spacingStyles?.length ) {\n\t\t\t\t\tspacingStyles.forEach( ( spacingStyle ) => {\n\t\t\t\t\t\tconst declarations = [];\n\n\t\t\t\t\t\tif ( spacingStyle.rules ) {\n\t\t\t\t\t\t\tObject.entries( spacingStyle.rules ).forEach(\n\t\t\t\t\t\t\t\t( [ cssProperty, cssValue ] ) => {\n\t\t\t\t\t\t\t\t\tdeclarations.push(\n\t\t\t\t\t\t\t\t\t\t`${ cssProperty }: ${\n\t\t\t\t\t\t\t\t\t\t\tcssValue ? cssValue : gapValue\n\t\t\t\t\t\t\t\t\t\t}`\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( declarations.length ) {\n\t\t\t\t\t\t\tlet combinedSelector = '';\n\n\t\t\t\t\t\t\tif ( ! hasBlockGapSupport ) {\n\t\t\t\t\t\t\t\t// For fallback gap styles, use lower specificity, to ensure styles do not unintentionally override theme styles.\n\t\t\t\t\t\t\t\tcombinedSelector =\n\t\t\t\t\t\t\t\t\tselector === ROOT_BLOCK_SELECTOR\n\t\t\t\t\t\t\t\t\t\t? `:where(.${ className }${\n\t\t\t\t\t\t\t\t\t\t\t\tspacingStyle?.selector || ''\n\t\t\t\t\t\t\t\t\t\t  })`\n\t\t\t\t\t\t\t\t\t\t: `:where(${ selector }.${ className }${\n\t\t\t\t\t\t\t\t\t\t\t\tspacingStyle?.selector || ''\n\t\t\t\t\t\t\t\t\t\t  })`;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tcombinedSelector =\n\t\t\t\t\t\t\t\t\tselector === ROOT_BLOCK_SELECTOR\n\t\t\t\t\t\t\t\t\t\t? `:where(${ selector } .${ className })${\n\t\t\t\t\t\t\t\t\t\t\t\tspacingStyle?.selector || ''\n\t\t\t\t\t\t\t\t\t\t  }`\n\t\t\t\t\t\t\t\t\t\t: `${ selector }-${ className }${\n\t\t\t\t\t\t\t\t\t\t\t\tspacingStyle?.selector || ''\n\t\t\t\t\t\t\t\t\t\t  }`;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\truleset += `${ combinedSelector } { ${ declarations.join(\n\t\t\t\t\t\t\t\t'; '\n\t\t\t\t\t\t\t) }; }`;\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t\t// For backwards compatibility, ensure the legacy block gap CSS variable is still available.\n\t\tif ( selector === ROOT_BLOCK_SELECTOR && hasBlockGapSupport ) {\n\t\t\truleset += `${ ROOT_CSS_PROPERTIES_SELECTOR } { --wp--style--block-gap: ${ gapValue }; }`;\n\t\t}\n\t}\n\n\t// Output base styles\n\tif ( selector === ROOT_BLOCK_SELECTOR && layoutDefinitions ) {\n\t\tconst validDisplayModes = [ 'block', 'flex', 'grid' ];\n\t\tObject.values( layoutDefinitions ).forEach(\n\t\t\t( { className, displayMode, baseStyles } ) => {\n\t\t\t\tif (\n\t\t\t\t\tdisplayMode &&\n\t\t\t\t\tvalidDisplayModes.includes( displayMode )\n\t\t\t\t) {\n\t\t\t\t\truleset += `${ selector } .${ className } { display:${ displayMode }; }`;\n\t\t\t\t}\n\n\t\t\t\tif ( baseStyles?.length ) {\n\t\t\t\t\tbaseStyles.forEach( ( baseStyle ) => {\n\t\t\t\t\t\tconst declarations = [];\n\n\t\t\t\t\t\tif ( baseStyle.rules ) {\n\t\t\t\t\t\t\tObject.entries( baseStyle.rules ).forEach(\n\t\t\t\t\t\t\t\t( [ cssProperty, cssValue ] ) => {\n\t\t\t\t\t\t\t\t\tdeclarations.push(\n\t\t\t\t\t\t\t\t\t\t`${ cssProperty }: ${ cssValue }`\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( declarations.length ) {\n\t\t\t\t\t\t\tconst combinedSelector = `${ selector } .${ className }${\n\t\t\t\t\t\t\t\tbaseStyle?.selector || ''\n\t\t\t\t\t\t\t}`;\n\t\t\t\t\t\t\truleset += `${ combinedSelector } { ${ declarations.join(\n\t\t\t\t\t\t\t\t'; '\n\t\t\t\t\t\t\t) }; }`;\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t}\n\n\treturn ruleset;\n}\n\nconst STYLE_KEYS = [\n\t'border',\n\t'color',\n\t'dimensions',\n\t'spacing',\n\t'typography',\n\t'filter',\n\t'outline',\n\t'shadow',\n\t'background',\n];\n\nfunction pickStyleKeys( treeToPickFrom ) {\n\tif ( ! treeToPickFrom ) {\n\t\treturn {};\n\t}\n\tconst entries = Object.entries( treeToPickFrom );\n\tconst pickedEntries = entries.filter( ( [ key ] ) =>\n\t\tSTYLE_KEYS.includes( key )\n\t);\n\t// clone the style objects so that `getFeatureDeclarations` can remove consumed keys from it\n\tconst clonedEntries = pickedEntries.map( ( [ key, style ] ) => [\n\t\tkey,\n\t\tJSON.parse( JSON.stringify( style ) ),\n\t] );\n\treturn Object.fromEntries( clonedEntries );\n}\n\nexport const getNodesWithStyles = ( tree, blockSelectors ) => {\n\tconst nodes = [];\n\n\tif ( ! tree?.styles ) {\n\t\treturn nodes;\n\t}\n\n\t// Top-level.\n\tconst styles = pickStyleKeys( tree.styles );\n\tif ( styles ) {\n\t\tnodes.push( {\n\t\t\tstyles,\n\t\t\tselector: ROOT_BLOCK_SELECTOR,\n\t\t} );\n\t}\n\n\tObject.entries( ELEMENTS ).forEach( ( [ name, selector ] ) => {\n\t\tif ( tree.styles?.elements?.[ name ] ) {\n\t\t\tnodes.push( {\n\t\t\t\tstyles: tree.styles?.elements?.[ name ],\n\t\t\t\tselector,\n\t\t\t} );\n\t\t}\n\t} );\n\n\t// Iterate over blocks: they can have styles & elements.\n\tObject.entries( tree.styles?.blocks ?? {} ).forEach(\n\t\t( [ blockName, node ] ) => {\n\t\t\tconst blockStyles = pickStyleKeys( node );\n\n\t\t\tif ( node?.variations ) {\n\t\t\t\tconst variations = {};\n\t\t\t\tObject.keys( node.variations ).forEach( ( variation ) => {\n\t\t\t\t\tvariations[ variation ] = pickStyleKeys(\n\t\t\t\t\t\tnode.variations[ variation ]\n\t\t\t\t\t);\n\t\t\t\t} );\n\t\t\t\tblockStyles.variations = variations;\n\t\t\t}\n\t\t\tif ( blockStyles && blockSelectors?.[ blockName ]?.selector ) {\n\t\t\t\tnodes.push( {\n\t\t\t\t\tduotoneSelector:\n\t\t\t\t\t\tblockSelectors[ blockName ].duotoneSelector,\n\t\t\t\t\tfallbackGapValue:\n\t\t\t\t\t\tblockSelectors[ blockName ].fallbackGapValue,\n\t\t\t\t\thasLayoutSupport:\n\t\t\t\t\t\tblockSelectors[ blockName ].hasLayoutSupport,\n\t\t\t\t\tselector: blockSelectors[ blockName ].selector,\n\t\t\t\t\tstyles: blockStyles,\n\t\t\t\t\tfeatureSelectors:\n\t\t\t\t\t\tblockSelectors[ blockName ].featureSelectors,\n\t\t\t\t\tstyleVariationSelectors:\n\t\t\t\t\t\tblockSelectors[ blockName ].styleVariationSelectors,\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\tObject.entries( node?.elements ?? {} ).forEach(\n\t\t\t\t( [ elementName, value ] ) => {\n\t\t\t\t\tif (\n\t\t\t\t\t\tvalue &&\n\t\t\t\t\t\tblockSelectors?.[ blockName ] &&\n\t\t\t\t\t\tELEMENTS[ elementName ]\n\t\t\t\t\t) {\n\t\t\t\t\t\tnodes.push( {\n\t\t\t\t\t\t\tstyles: value,\n\t\t\t\t\t\t\tselector: blockSelectors[ blockName ]?.selector\n\t\t\t\t\t\t\t\t.split( ',' )\n\t\t\t\t\t\t\t\t.map( ( sel ) => {\n\t\t\t\t\t\t\t\t\tconst elementSelectors =\n\t\t\t\t\t\t\t\t\t\tELEMENTS[ elementName ].split( ',' );\n\t\t\t\t\t\t\t\t\treturn elementSelectors.map(\n\t\t\t\t\t\t\t\t\t\t( elementSelector ) =>\n\t\t\t\t\t\t\t\t\t\t\tsel + ' ' + elementSelector\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t} )\n\t\t\t\t\t\t\t\t.join( ',' ),\n\t\t\t\t\t\t} );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\t);\n\n\treturn nodes;\n};\n\nexport const getNodesWithSettings = ( tree, blockSelectors ) => {\n\tconst nodes = [];\n\n\tif ( ! tree?.settings ) {\n\t\treturn nodes;\n\t}\n\n\tconst pickPresets = ( treeToPickFrom ) => {\n\t\tlet presets = {};\n\t\tPRESET_METADATA.forEach( ( { path } ) => {\n\t\t\tconst value = getValueFromObjectPath( treeToPickFrom, path, false );\n\t\t\tif ( value !== false ) {\n\t\t\t\tpresets = setImmutably( presets, path, value );\n\t\t\t}\n\t\t} );\n\t\treturn presets;\n\t};\n\n\t// Top-level.\n\tconst presets = pickPresets( tree.settings );\n\tconst custom = tree.settings?.custom;\n\tif ( Object.keys( presets ).length > 0 || custom ) {\n\t\tnodes.push( {\n\t\t\tpresets,\n\t\t\tcustom,\n\t\t\tselector: ROOT_CSS_PROPERTIES_SELECTOR,\n\t\t} );\n\t}\n\n\t// Blocks.\n\tObject.entries( tree.settings?.blocks ?? {} ).forEach(\n\t\t( [ blockName, node ] ) => {\n\t\t\tconst blockPresets = pickPresets( node );\n\t\t\tconst blockCustom = node.custom;\n\t\t\tif ( Object.keys( blockPresets ).length > 0 || blockCustom ) {\n\t\t\t\tnodes.push( {\n\t\t\t\t\tpresets: blockPresets,\n\t\t\t\t\tcustom: blockCustom,\n\t\t\t\t\tselector: blockSelectors[ blockName ]?.selector,\n\t\t\t\t} );\n\t\t\t}\n\t\t}\n\t);\n\n\treturn nodes;\n};\n\nexport const toCustomProperties = ( tree, blockSelectors ) => {\n\tconst settings = getNodesWithSettings( tree, blockSelectors );\n\tlet ruleset = '';\n\tsettings.forEach( ( { presets, custom, selector } ) => {\n\t\tconst declarations = getPresetsDeclarations( presets, tree?.settings );\n\t\tconst customProps = flattenTree( custom, '--wp--custom--', '--' );\n\t\tif ( customProps.length > 0 ) {\n\t\t\tdeclarations.push( ...customProps );\n\t\t}\n\n\t\tif ( declarations.length > 0 ) {\n\t\t\truleset += `${ selector }{${ declarations.join( ';' ) };}`;\n\t\t}\n\t} );\n\n\treturn ruleset;\n};\n\nexport const toStyles = (\n\ttree,\n\tblockSelectors,\n\thasBlockGapSupport,\n\thasFallbackGapSupport,\n\tdisableLayoutStyles = false,\n\tisTemplate = true\n) => {\n\tconst nodesWithStyles = getNodesWithStyles( tree, blockSelectors );\n\tconst nodesWithSettings = getNodesWithSettings( tree, blockSelectors );\n\tconst useRootPaddingAlign = tree?.settings?.useRootPaddingAwareAlignments;\n\tconst { contentSize, wideSize } = tree?.settings?.layout || {};\n\tlet ruleset = '';\n\n\tif ( contentSize || wideSize ) {\n\t\truleset += `${ ROOT_CSS_PROPERTIES_SELECTOR } {`;\n\t\truleset = contentSize\n\t\t\t? ruleset + ` --wp--style--global--content-size: ${ contentSize };`\n\t\t\t: ruleset;\n\t\truleset = wideSize\n\t\t\t? ruleset + ` --wp--style--global--wide-size: ${ wideSize };`\n\t\t\t: ruleset;\n\t\truleset += '}';\n\t}\n\n\t/*\n\t * Reset default browser margin on the body element.\n\t * This is set on the body selector **before** generating the ruleset\n\t * from the `theme.json`. This is to ensure that if the `theme.json` declares\n\t * `margin` in its `spacing` declaration for the `body` element then these\n\t * user-generated values take precedence in the CSS cascade.\n\t * @link https://github.com/WordPress/gutenberg/issues/36147.\n\t */\n\truleset += 'body {margin: 0;';\n\n\t// Root padding styles should only be output for full templates, not patterns or template parts.\n\tif ( useRootPaddingAlign && isTemplate ) {\n\t\t/*\n\t\t * These rules reproduce the ones from https://github.com/WordPress/gutenberg/blob/79103f124925d1f457f627e154f52a56228ed5ad/lib/class-wp-theme-json-gutenberg.php#L2508\n\t\t * almost exactly, but for the selectors that target block wrappers in the front end. This code only runs in the editor, so it doesn't need those selectors.\n\t\t */\n\t\truleset += `padding-right: 0; padding-left: 0; padding-top: var(--wp--style--root--padding-top); padding-bottom: var(--wp--style--root--padding-bottom) }\n\t\t\t.has-global-padding { padding-right: var(--wp--style--root--padding-right); padding-left: var(--wp--style--root--padding-left); }\n\t\t\t.has-global-padding :where(.has-global-padding:not(.wp-block-block)) { padding-right: 0; padding-left: 0; }\n\t\t\t.has-global-padding > .alignfull { margin-right: calc(var(--wp--style--root--padding-right) * -1); margin-left: calc(var(--wp--style--root--padding-left) * -1); }\n\t\t\t.has-global-padding :where(.has-global-padding:not(.wp-block-block)) > .alignfull { margin-right: 0; margin-left: 0; }\n\t\t\t.has-global-padding > .alignfull:where(:not(.has-global-padding):not(.is-layout-flex):not(.is-layout-grid)) > :where(.wp-block:not(.alignfull),p,h1,h2,h3,h4,h5,h6,ul,ol) { padding-right: var(--wp--style--root--padding-right); padding-left: var(--wp--style--root--padding-left); }\n\t\t\t.has-global-padding :where(.has-global-padding) > .alignfull:where(:not(.has-global-padding)) > :where(.wp-block:not(.alignfull),p,h1,h2,h3,h4,h5,h6,ul,ol) { padding-right: 0; padding-left: 0;`;\n\t}\n\n\truleset += '}';\n\n\tnodesWithStyles.forEach(\n\t\t( {\n\t\t\tselector,\n\t\t\tduotoneSelector,\n\t\t\tstyles,\n\t\t\tfallbackGapValue,\n\t\t\thasLayoutSupport,\n\t\t\tfeatureSelectors,\n\t\t\tstyleVariationSelectors,\n\t\t} ) => {\n\t\t\t// Process styles for block support features with custom feature level\n\t\t\t// CSS selectors set.\n\t\t\tif ( featureSelectors ) {\n\t\t\t\tconst featureDeclarations = getFeatureDeclarations(\n\t\t\t\t\tfeatureSelectors,\n\t\t\t\t\tstyles\n\t\t\t\t);\n\n\t\t\t\tObject.entries( featureDeclarations ).forEach(\n\t\t\t\t\t( [ cssSelector, declarations ] ) => {\n\t\t\t\t\t\tif ( declarations.length ) {\n\t\t\t\t\t\t\tconst rules = declarations.join( ';' );\n\t\t\t\t\t\t\truleset += `:where(${ cssSelector }){${ rules };}`;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif ( styleVariationSelectors ) {\n\t\t\t\tObject.entries( styleVariationSelectors ).forEach(\n\t\t\t\t\t( [ styleVariationName, styleVariationSelector ] ) => {\n\t\t\t\t\t\tconst styleVariations =\n\t\t\t\t\t\t\tstyles?.variations?.[ styleVariationName ];\n\t\t\t\t\t\tif ( styleVariations ) {\n\t\t\t\t\t\t\t// If the block uses any custom selectors for block support, add those first.\n\t\t\t\t\t\t\tif ( featureSelectors ) {\n\t\t\t\t\t\t\t\tconst featureDeclarations =\n\t\t\t\t\t\t\t\t\tgetFeatureDeclarations(\n\t\t\t\t\t\t\t\t\t\tfeatureSelectors,\n\t\t\t\t\t\t\t\t\t\tstyleVariations\n\t\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\tObject.entries( featureDeclarations ).forEach(\n\t\t\t\t\t\t\t\t\t( [ baseSelector, declarations ] ) => {\n\t\t\t\t\t\t\t\t\t\tif ( declarations.length ) {\n\t\t\t\t\t\t\t\t\t\t\tconst cssSelector =\n\t\t\t\t\t\t\t\t\t\t\t\tconcatFeatureVariationSelectorString(\n\t\t\t\t\t\t\t\t\t\t\t\t\tbaseSelector,\n\t\t\t\t\t\t\t\t\t\t\t\t\tstyleVariationSelector\n\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\tconst rules =\n\t\t\t\t\t\t\t\t\t\t\t\tdeclarations.join( ';' );\n\t\t\t\t\t\t\t\t\t\t\truleset += `${ cssSelector }{${ rules };}`;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// Otherwise add regular selectors.\n\t\t\t\t\t\t\tconst styleVariationDeclarations =\n\t\t\t\t\t\t\t\tgetStylesDeclarations(\n\t\t\t\t\t\t\t\t\tstyleVariations,\n\t\t\t\t\t\t\t\t\tstyleVariationSelector,\n\t\t\t\t\t\t\t\t\tuseRootPaddingAlign,\n\t\t\t\t\t\t\t\t\ttree\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tif ( styleVariationDeclarations.length ) {\n\t\t\t\t\t\t\t\truleset += `${ styleVariationSelector }{${ styleVariationDeclarations.join(\n\t\t\t\t\t\t\t\t\t';'\n\t\t\t\t\t\t\t\t) };}`;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t// Process duotone styles.\n\t\t\tif ( duotoneSelector ) {\n\t\t\t\tconst duotoneStyles = {};\n\t\t\t\tif ( styles?.filter ) {\n\t\t\t\t\tduotoneStyles.filter = styles.filter;\n\t\t\t\t\tdelete styles.filter;\n\t\t\t\t}\n\t\t\t\tconst duotoneDeclarations =\n\t\t\t\t\tgetStylesDeclarations( duotoneStyles );\n\t\t\t\tif ( duotoneDeclarations.length ) {\n\t\t\t\t\truleset += `${ duotoneSelector }{${ duotoneDeclarations.join(\n\t\t\t\t\t\t';'\n\t\t\t\t\t) };}`;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Process blockGap and layout styles.\n\t\t\tif (\n\t\t\t\t! disableLayoutStyles &&\n\t\t\t\t( ROOT_BLOCK_SELECTOR === selector || hasLayoutSupport )\n\t\t\t) {\n\t\t\t\truleset += getLayoutStyles( {\n\t\t\t\t\tstyle: styles,\n\t\t\t\t\tselector,\n\t\t\t\t\thasBlockGapSupport,\n\t\t\t\t\thasFallbackGapSupport,\n\t\t\t\t\tfallbackGapValue,\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\t// Process the remaining block styles (they use either normal block class or __experimentalSelector).\n\t\t\tconst declarations = getStylesDeclarations(\n\t\t\t\tstyles,\n\t\t\t\tselector,\n\t\t\t\tuseRootPaddingAlign,\n\t\t\t\ttree,\n\t\t\t\tisTemplate\n\t\t\t);\n\t\t\tif ( declarations?.length ) {\n\t\t\t\truleset += `:where(${ selector }){${ declarations.join(\n\t\t\t\t\t';'\n\t\t\t\t) };}`;\n\t\t\t}\n\n\t\t\t// Check for pseudo selector in `styles` and handle separately.\n\t\t\tconst pseudoSelectorStyles = Object.entries( styles ).filter(\n\t\t\t\t( [ key ] ) => key.startsWith( ':' )\n\t\t\t);\n\n\t\t\tif ( pseudoSelectorStyles?.length ) {\n\t\t\t\tpseudoSelectorStyles.forEach(\n\t\t\t\t\t( [ pseudoKey, pseudoStyle ] ) => {\n\t\t\t\t\t\tconst pseudoDeclarations =\n\t\t\t\t\t\t\tgetStylesDeclarations( pseudoStyle );\n\n\t\t\t\t\t\tif ( ! pseudoDeclarations?.length ) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// `selector` maybe provided in a form\n\t\t\t\t\t\t// where block level selectors have sub element\n\t\t\t\t\t\t// selectors appended to them as a comma separated\n\t\t\t\t\t\t// string.\n\t\t\t\t\t\t// e.g. `h1 a,h2 a,h3 a,h4 a,h5 a,h6 a`;\n\t\t\t\t\t\t// Split and append pseudo selector to create\n\t\t\t\t\t\t// the proper rules to target the elements.\n\t\t\t\t\t\tconst _selector = selector\n\t\t\t\t\t\t\t.split( ',' )\n\t\t\t\t\t\t\t.map( ( sel ) => sel + pseudoKey )\n\t\t\t\t\t\t\t.join( ',' );\n\n\t\t\t\t\t\tconst pseudoRule = `${ _selector }{${ pseudoDeclarations.join(\n\t\t\t\t\t\t\t';'\n\t\t\t\t\t\t) };}`;\n\n\t\t\t\t\t\truleset += pseudoRule;\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t);\n\n\t/* Add alignment / layout styles */\n\truleset =\n\t\truleset +\n\t\t'.wp-site-blocks > .alignleft { float: left; margin-right: 2em; }';\n\truleset =\n\t\truleset +\n\t\t'.wp-site-blocks > .alignright { float: right; margin-left: 2em; }';\n\truleset =\n\t\truleset +\n\t\t'.wp-site-blocks > .aligncenter { justify-content: center; margin-left: auto; margin-right: auto; }';\n\n\tif ( hasBlockGapSupport ) {\n\t\t// Use fallback of `0.5em` just in case, however if there is blockGap support, there should nearly always be a real value.\n\t\tconst gapValue =\n\t\t\tgetGapCSSValue( tree?.styles?.spacing?.blockGap ) || '0.5em';\n\t\truleset =\n\t\t\truleset +\n\t\t\t`:where(.wp-site-blocks) > * { margin-block-start: ${ gapValue }; margin-block-end: 0; }`;\n\t\truleset =\n\t\t\truleset +\n\t\t\t':where(.wp-site-blocks) > :first-child:first-child { margin-block-start: 0; }';\n\t\truleset =\n\t\t\truleset +\n\t\t\t':where(.wp-site-blocks) > :last-child:last-child { margin-block-end: 0; }';\n\t}\n\n\tnodesWithSettings.forEach( ( { selector, presets } ) => {\n\t\tif (\n\t\t\tROOT_BLOCK_SELECTOR === selector ||\n\t\t\tROOT_CSS_PROPERTIES_SELECTOR === selector\n\t\t) {\n\t\t\t// Do not add extra specificity for top-level classes.\n\t\t\tselector = '';\n\t\t}\n\n\t\tconst classes = getPresetsClasses( selector, presets );\n\t\tif ( classes.length > 0 ) {\n\t\t\truleset += classes;\n\t\t}\n\t} );\n\n\treturn ruleset;\n};\n\nexport function toSvgFilters( tree, blockSelectors ) {\n\tconst nodesWithSettings = getNodesWithSettings( tree, blockSelectors );\n\treturn nodesWithSettings.flatMap( ( { presets } ) => {\n\t\treturn getPresetsSvgFilters( presets );\n\t} );\n}\n\nconst getSelectorsConfig = ( blockType, rootSelector ) => {\n\tif (\n\t\tblockType?.selectors &&\n\t\tObject.keys( blockType.selectors ).length > 0\n\t) {\n\t\treturn blockType.selectors;\n\t}\n\n\tconst config = { root: rootSelector };\n\tObject.entries( BLOCK_SUPPORT_FEATURE_LEVEL_SELECTORS ).forEach(\n\t\t( [ featureKey, featureName ] ) => {\n\t\t\tconst featureSelector = getBlockCSSSelector(\n\t\t\t\tblockType,\n\t\t\t\tfeatureKey\n\t\t\t);\n\n\t\t\tif ( featureSelector ) {\n\t\t\t\tconfig[ featureName ] = featureSelector;\n\t\t\t}\n\t\t}\n\t);\n\n\treturn config;\n};\n\nexport const getBlockSelectors = ( blockTypes, getBlockStyles ) => {\n\tconst result = {};\n\tblockTypes.forEach( ( blockType ) => {\n\t\tconst name = blockType.name;\n\t\tconst selector = getBlockCSSSelector( blockType );\n\t\tlet duotoneSelector = getBlockCSSSelector(\n\t\t\tblockType,\n\t\t\t'filter.duotone'\n\t\t);\n\n\t\t// Keep backwards compatibility for support.color.__experimentalDuotone.\n\t\tif ( ! duotoneSelector ) {\n\t\t\tconst rootSelector = getBlockCSSSelector( blockType );\n\t\t\tconst duotoneSupport = getBlockSupport(\n\t\t\t\tblockType,\n\t\t\t\t'color.__experimentalDuotone',\n\t\t\t\tfalse\n\t\t\t);\n\t\t\tduotoneSelector =\n\t\t\t\tduotoneSupport && scopeSelector( rootSelector, duotoneSupport );\n\t\t}\n\n\t\tconst hasLayoutSupport =\n\t\t\t!! blockType?.supports?.layout ||\n\t\t\t!! blockType?.supports?.__experimentalLayout;\n\t\tconst fallbackGapValue =\n\t\t\tblockType?.supports?.spacing?.blockGap?.__experimentalDefault;\n\n\t\tconst blockStyleVariations = getBlockStyles( name );\n\t\tconst styleVariationSelectors = {};\n\t\tif ( blockStyleVariations?.length ) {\n\t\t\tblockStyleVariations.forEach( ( variation ) => {\n\t\t\t\tconst styleVariationSelector = getBlockStyleVariationSelector(\n\t\t\t\t\tvariation.name,\n\t\t\t\t\tselector\n\t\t\t\t);\n\t\t\t\tstyleVariationSelectors[ variation.name ] =\n\t\t\t\t\tstyleVariationSelector;\n\t\t\t} );\n\t\t}\n\t\t// For each block support feature add any custom selectors.\n\t\tconst featureSelectors = getSelectorsConfig( blockType, selector );\n\n\t\tresult[ name ] = {\n\t\t\tduotoneSelector,\n\t\t\tfallbackGapValue,\n\t\t\tfeatureSelectors: Object.keys( featureSelectors ).length\n\t\t\t\t? featureSelectors\n\t\t\t\t: undefined,\n\t\t\thasLayoutSupport,\n\t\t\tname,\n\t\t\tselector,\n\t\t\tstyleVariationSelectors: Object.keys( styleVariationSelectors )\n\t\t\t\t.length\n\t\t\t\t? styleVariationSelectors\n\t\t\t\t: undefined,\n\t\t};\n\t} );\n\n\treturn result;\n};\n\n/**\n * If there is a separator block whose color is defined in theme.json via background,\n * update the separator color to the same value by using border color.\n *\n * @param {Object} config Theme.json configuration file object.\n * @return {Object} configTheme.json configuration file object updated.\n */\nfunction updateConfigWithSeparator( config ) {\n\tconst needsSeparatorStyleUpdate =\n\t\tconfig.styles?.blocks?.[ 'core/separator' ] &&\n\t\tconfig.styles?.blocks?.[ 'core/separator' ].color?.background &&\n\t\t! config.styles?.blocks?.[ 'core/separator' ].color?.text &&\n\t\t! config.styles?.blocks?.[ 'core/separator' ].border?.color;\n\tif ( needsSeparatorStyleUpdate ) {\n\t\treturn {\n\t\t\t...config,\n\t\t\tstyles: {\n\t\t\t\t...config.styles,\n\t\t\t\tblocks: {\n\t\t\t\t\t...config.styles.blocks,\n\t\t\t\t\t'core/separator': {\n\t\t\t\t\t\t...config.styles.blocks[ 'core/separator' ],\n\t\t\t\t\t\tcolor: {\n\t\t\t\t\t\t\t...config.styles.blocks[ 'core/separator' ].color,\n\t\t\t\t\t\t\ttext: config.styles?.blocks[ 'core/separator' ]\n\t\t\t\t\t\t\t\t.color.background,\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t};\n\t}\n\treturn config;\n}\n\nexport function processCSSNesting( css, blockSelector ) {\n\tlet processedCSS = '';\n\n\t// Split CSS nested rules.\n\tconst parts = css.split( '&' );\n\tparts.forEach( ( part ) => {\n\t\tconst isRootCss = ! part.includes( '{' );\n\t\tif ( isRootCss ) {\n\t\t\t// If the part doesn't contain braces, it applies to the root level.\n\t\t\tprocessedCSS += `${ blockSelector }{${ part.trim() }}`;\n\t\t} else {\n\t\t\t// If the part contains braces, it's a nested CSS rule.\n\t\t\tconst splittedPart = part.replace( '}', '' ).split( '{' );\n\t\t\tif ( splittedPart.length !== 2 ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst [ nestedSelector, cssValue ] = splittedPart;\n\t\t\tconst combinedSelector = nestedSelector.startsWith( ' ' )\n\t\t\t\t? scopeSelector( blockSelector, nestedSelector )\n\t\t\t\t: appendToSelector( blockSelector, nestedSelector );\n\n\t\t\tprocessedCSS += `${ combinedSelector }{${ cssValue.trim() }}`;\n\t\t}\n\t} );\n\treturn processedCSS;\n}\n\n/**\n * Returns the global styles output using a global styles configuration.\n * If wishing to generate global styles and settings based on the\n * global styles config loaded in the editor context, use `useGlobalStylesOutput()`.\n * The use case for a custom config is to generate bespoke styles\n * and settings for previews, or other out-of-editor experiences.\n *\n * @param {Object} mergedConfig Global styles configuration.\n * @return {Array} Array of stylesheets and settings.\n */\nexport function useGlobalStylesOutputWithConfig( mergedConfig = {} ) {\n\tconst [ blockGap ] = useGlobalSetting( 'spacing.blockGap' );\n\tconst hasBlockGapSupport = blockGap !== null;\n\tconst hasFallbackGapSupport = ! hasBlockGapSupport; // This setting isn't useful yet: it exists as a placeholder for a future explicit fallback styles support.\n\tconst disableLayoutStyles = useSelect( ( select ) => {\n\t\tconst { getSettings } = select( blockEditorStore );\n\t\treturn !! getSettings().disableLayoutStyles;\n\t} );\n\n\tconst blockContext = useContext( BlockContext );\n\n\tconst isTemplate = blockContext?.templateSlug !== undefined;\n\n\tconst { getBlockStyles } = useSelect( blocksStore );\n\n\treturn useMemo( () => {\n\t\tif ( ! mergedConfig?.styles || ! mergedConfig?.settings ) {\n\t\t\treturn [];\n\t\t}\n\t\tconst updatedConfig = updateConfigWithSeparator( mergedConfig );\n\n\t\tconst blockSelectors = getBlockSelectors(\n\t\t\tgetBlockTypes(),\n\t\t\tgetBlockStyles\n\t\t);\n\n\t\tconst customProperties = toCustomProperties(\n\t\t\tupdatedConfig,\n\t\t\tblockSelectors\n\t\t);\n\n\t\tconst globalStyles = toStyles(\n\t\t\tupdatedConfig,\n\t\t\tblockSelectors,\n\t\t\thasBlockGapSupport,\n\t\t\thasFallbackGapSupport,\n\t\t\tdisableLayoutStyles,\n\t\t\tisTemplate\n\t\t);\n\t\tconst svgs = toSvgFilters( updatedConfig, blockSelectors );\n\n\t\tconst styles = [\n\t\t\t{\n\t\t\t\tcss: customProperties,\n\t\t\t\tisGlobalStyles: true,\n\t\t\t},\n\t\t\t{\n\t\t\t\tcss: globalStyles,\n\t\t\t\tisGlobalStyles: true,\n\t\t\t},\n\t\t\t// Load custom CSS in own stylesheet so that any invalid CSS entered in the input won't break all the global styles in the editor.\n\t\t\t{\n\t\t\t\tcss: updatedConfig.styles.css ?? '',\n\t\t\t\tisGlobalStyles: true,\n\t\t\t},\n\t\t\t{\n\t\t\t\tassets: svgs,\n\t\t\t\t__unstableType: 'svg',\n\t\t\t\tisGlobalStyles: true,\n\t\t\t},\n\t\t];\n\n\t\t// Loop through the blocks to check if there are custom CSS values.\n\t\t// If there are, get the block selector and push the selector together with\n\t\t// the CSS value to the 'stylesheets' array.\n\t\tgetBlockTypes().forEach( ( blockType ) => {\n\t\t\tif ( updatedConfig.styles.blocks[ blockType.name ]?.css ) {\n\t\t\t\tconst selector = blockSelectors[ blockType.name ].selector;\n\t\t\t\tstyles.push( {\n\t\t\t\t\tcss: processCSSNesting(\n\t\t\t\t\t\tupdatedConfig.styles.blocks[ blockType.name ]?.css,\n\t\t\t\t\t\tselector\n\t\t\t\t\t),\n\t\t\t\t\tisGlobalStyles: true,\n\t\t\t\t} );\n\t\t\t}\n\t\t} );\n\n\t\treturn [ styles, updatedConfig.settings ];\n\t}, [\n\t\thasBlockGapSupport,\n\t\thasFallbackGapSupport,\n\t\tmergedConfig,\n\t\tdisableLayoutStyles,\n\t\tisTemplate,\n\t\tgetBlockStyles,\n\t] );\n}\n\n/**\n * Returns the global styles output based on the current state of global styles config loaded in the editor context.\n *\n * @return {Array} Array of stylesheets and settings.\n */\nexport function useGlobalStylesOutput() {\n\tconst { merged: mergedConfig } = useContext( GlobalStylesContext );\n\treturn useGlobalStylesOutputWithConfig( mergedConfig );\n}\n"],"mappings":"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"}