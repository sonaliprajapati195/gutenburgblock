{"version":3,"names":["_data","require","_blocks","_components","_icons","_i18n","_convertToGroupButtons","_store","layouts","group","type","row","flexWrap","stack","orientation","grid","BlockGroupToolbar","blocksSelection","clientIds","groupingBlockName","isGroupable","useConvertToGroupButtonProps","replaceBlocks","useDispatch","blockEditorStore","canRemove","variations","useSelect","select","canRemoveBlocks","getBlockVariations","blocksStore","onConvertToGroup","layout","newBlocks","switchToBlockType","length","attributes","onConvertToRow","onConvertToStack","onConvertToGrid","canInsertRow","find","name","canInsertStack","canInsertGrid","_react","createElement","ToolbarGroup","ToolbarButton","icon","label","_x","onClick","_default","exports","default"],"sources":["@wordpress/block-editor/src/components/convert-to-group-buttons/toolbar.js"],"sourcesContent":["/**\n * WordPress dependencies\n */\nimport { useDispatch, useSelect } from '@wordpress/data';\nimport { switchToBlockType, store as blocksStore } from '@wordpress/blocks';\nimport { ToolbarButton, ToolbarGroup } from '@wordpress/components';\nimport { group, row, stack, grid } from '@wordpress/icons';\nimport { _x } from '@wordpress/i18n';\n\n/**\n * Internal dependencies\n */\nimport { useConvertToGroupButtonProps } from '../convert-to-group-buttons';\nimport { store as blockEditorStore } from '../../store';\n\nconst layouts = {\n\tgroup: { type: 'constrained' },\n\trow: { type: 'flex', flexWrap: 'nowrap' },\n\tstack: { type: 'flex', orientation: 'vertical' },\n\tgrid: { type: 'grid' },\n};\n\nfunction BlockGroupToolbar() {\n\tconst { blocksSelection, clientIds, groupingBlockName, isGroupable } =\n\t\tuseConvertToGroupButtonProps();\n\tconst { replaceBlocks } = useDispatch( blockEditorStore );\n\n\tconst { canRemove, variations } = useSelect(\n\t\t( select ) => {\n\t\t\tconst { canRemoveBlocks } = select( blockEditorStore );\n\t\t\tconst { getBlockVariations } = select( blocksStore );\n\n\t\t\treturn {\n\t\t\t\tcanRemove: canRemoveBlocks( clientIds ),\n\t\t\t\tvariations: getBlockVariations(\n\t\t\t\t\tgroupingBlockName,\n\t\t\t\t\t'transform'\n\t\t\t\t),\n\t\t\t};\n\t\t},\n\t\t[ clientIds, groupingBlockName ]\n\t);\n\n\tconst onConvertToGroup = ( layout ) => {\n\t\tconst newBlocks = switchToBlockType(\n\t\t\tblocksSelection,\n\t\t\tgroupingBlockName\n\t\t);\n\n\t\tif ( typeof layout !== 'string' ) {\n\t\t\tlayout = 'group';\n\t\t}\n\n\t\tif ( newBlocks && newBlocks.length > 0 ) {\n\t\t\t// Because the block is not in the store yet we can't use\n\t\t\t// updateBlockAttributes so need to manually update attributes.\n\t\t\tnewBlocks[ 0 ].attributes.layout = layouts[ layout ];\n\t\t\treplaceBlocks( clientIds, newBlocks );\n\t\t}\n\t};\n\n\tconst onConvertToRow = () => onConvertToGroup( 'row' );\n\tconst onConvertToStack = () => onConvertToGroup( 'stack' );\n\tconst onConvertToGrid = () => onConvertToGroup( 'grid' );\n\n\t// Don't render the button if the current selection cannot be grouped.\n\t// A good example is selecting multiple button blocks within a Buttons block:\n\t// The group block is not a valid child of Buttons, so we should not show the button.\n\t// Any blocks that are locked against removal also cannot be grouped.\n\tif ( ! isGroupable || ! canRemove ) {\n\t\treturn null;\n\t}\n\n\tconst canInsertRow = !! variations.find(\n\t\t( { name } ) => name === 'group-row'\n\t);\n\tconst canInsertStack = !! variations.find(\n\t\t( { name } ) => name === 'group-stack'\n\t);\n\tconst canInsertGrid = !! variations.find(\n\t\t( { name } ) => name === 'group-grid'\n\t);\n\n\treturn (\n\t\t<ToolbarGroup>\n\t\t\t<ToolbarButton\n\t\t\t\ticon={ group }\n\t\t\t\tlabel={ _x( 'Group', 'verb' ) }\n\t\t\t\tonClick={ onConvertToGroup }\n\t\t\t/>\n\t\t\t{ canInsertRow && (\n\t\t\t\t<ToolbarButton\n\t\t\t\t\ticon={ row }\n\t\t\t\t\tlabel={ _x( 'Row', 'single horizontal line' ) }\n\t\t\t\t\tonClick={ onConvertToRow }\n\t\t\t\t/>\n\t\t\t) }\n\t\t\t{ canInsertStack && (\n\t\t\t\t<ToolbarButton\n\t\t\t\t\ticon={ stack }\n\t\t\t\t\tlabel={ _x( 'Stack', 'verb' ) }\n\t\t\t\t\tonClick={ onConvertToStack }\n\t\t\t\t/>\n\t\t\t) }\n\t\t\t{ canInsertGrid && (\n\t\t\t\t<ToolbarButton\n\t\t\t\t\ticon={ grid }\n\t\t\t\t\tlabel={ _x( 'Grid', 'verb' ) }\n\t\t\t\t\tonClick={ onConvertToGrid }\n\t\t\t\t/>\n\t\t\t) }\n\t\t</ToolbarGroup>\n\t);\n}\n\nexport default BlockGroupToolbar;\n"],"mappings":"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"}