"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useZoomOut = useZoomOut;
var _data = require("@wordpress/data");
var _element = require("@wordpress/element");
var _store = require("../store");
/**
 * WordPress dependencies
 */

/**
 * Internal dependencies
 */

/**
 * A hook used to set the editor mode to zoomed out mode, invoking the hook sets the mode.
 */
function useZoomOut() {
  const {
    __unstableSetEditorMode
  } = (0, _data.useDispatch)(_store.store);
  const {
    mode
  } = (0, _data.useSelect)(select => {
    return {
      mode: select(_store.store).__unstableGetEditorMode()
    };
  }, []);

  // Intentionality left without any dependency.
  // This effect should only run when the component is rendered and unmounted.
  // The effect opens the zoom-out view if it is not open before when applying a style variation.
  (0, _element.useEffect)(() => {
    if (mode !== 'zoom-out') {
      __unstableSetEditorMode('zoom-out');
      return () => {
        // Revert to original mode
        __unstableSetEditorMode(mode);
      };
    }
    // eslint-disable-next-line react-hooks/exhaustive-deps
  }, []);
}
//# sourceMappingURL=use-zoom-out.js.map